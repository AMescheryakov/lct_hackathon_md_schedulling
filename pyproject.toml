[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "hack_doctor_schedul"
description = "A short description of the project."
authors = [
    {name = "CINIMEX", email = "maksim.vatkin@cinimex.ru"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Commercial/Proprietrary. (c) Cinimex DataLab LLC"}
version = "0.0.1"

# Tools
[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
    /(
        \.eggs
        | \.git
        | \.hg
        | \.mypy_cache
        | \.venv
        | _build
        | buck-out
        | build
        | dist
        | docs
    )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["src/hack_doctor_schedul",]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--mypy --cov src/hack_doctor_schedul --cov-report xml:cov.xml --cov-report term-missing"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["src/hack_doctor_schedul"]
omit = [
    "data",
    "docs",
    "models",
    "notebooks",
]

[tool.coverage.paths]
source = [
    "src/hack_doctor_schedul",
    "*/site-packages/"
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:"
]

[tool.commitizen]
# name = "cz_conventional_jira"
bump_message = "release $current_version â†’ $new_version"
version = "1.1.0"
version_files = [
    "setup.py:version",
    "README.md:# Version"
]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = true
warn_unused_configs = true
mypy_path = "src/hack_doctor_schedul"
plugins = ["sqlalchemy.ext.mypy.plugin", "numpy.typing.mypy_plugin"]

[tool.mypy-pytest]
ignore_missing_imports = true
